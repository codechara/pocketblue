on:
  workflow_call:
    inputs:
      image_name:
        required: true
        type: string
      image_tag:
        required: true
        type: string
      esp_size:
        required: true
        type: number
      rootfs:
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-24.04-arm

    steps:
    - name: Clone the repository
      uses: actions/checkout@v4

    - name: Raw disk image
      id: build-raw
      uses: osbuild/bootc-image-builder-action@v0.0.2
      with:
        config-file: ./config.toml
        image: ${{ vars.REGISTRY }}/${{ inputs.image_name }}:${{ inputs.image_tag }}
        rootfs: ${{ inputs.rootfs }}
        types: |
          raw

    - name: Post-process image artifacts
      run: |
        set -uexo pipefail

        mkdir artifacts/

        sudo kpartx -vafs ./${{ steps.build-raw.outputs.output-directory }}/image/disk.raw
        sudo dd if=/dev/mapper/loop0p1 of=efipart.vfat bs=1M
        sudo dd if=/dev/mapper/loop0p2 of=artifacts/boot.raw bs=1M
        sudo dd if=/dev/mapper/loop0p3 of=artifacts/root.raw bs=1M

        VOLID=$(file efipart.vfat | grep -Eo "serial number 0x.{8}" | cut -d\  -f3)

        truncate -s ${{ inputs.esp_size }} artifacts/esp.raw
        mkfs.vfat -F 32 -S 4096 -n EFI -i $VOLID artifacts/esp.raw

        mkdir -p esp.old esp.new
        sudo mount -o loop efipart.vfat esp.old
        sudo mount -o loop artifacts/esp.raw esp.new

        sudo cp -a esp.old/. esp.new/
        sudo umount esp.old/ esp.new/

        sudo apt install -y p7zip
        7z -mx=9 a pocketblue-${{ inputs.image_name }}-${{ inputs.image_tag }}.7z artifacts/*

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: pocketblue-${{ inputs.image_name }}-${{ inputs.image_tag }}
        path: ./pocketblue-${{ inputs.image_name }}-${{ inputs.image_tag }}.7z
        compression-level: 0
